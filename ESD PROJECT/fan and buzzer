#include<LPC17xx.h> 
float x,y,temp; 
unsigned long a,b,temp2,r1,i,s=0,l; 
unsigned char  
seven_seg[16]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0X5E,0X79,0X71};
unsigned char digits[]={0,0,0,0};
unsigned int dig_sel[]={0<<23,1<<23,2<<23,3<<23};
void display(void); 
void timer_init(void); 
int main(void) 
{ 
SystemInit(); 
SystemCoreClockUpdate(); 
timer_init();
LPC_PINCON->PINSEL0&=0XFF0000FF;  LPC_PINCON->PINSEL1=0; 
LPC_PINCON->PINSEL1|=1<<16; 
	LPC_PINCON->PINSEL4=0;
	LPC_GPIO2->FIODIR|=1<<13;
	LPC_GPIO2->FIODIR|=1<<1;
LPC_PINCON->PINSEL3|=0x00<<14; LPC_GPIO0->FIODIR=0XFF<<4; 
LPC_GPIO0->FIODIR |= 1<<22; 
LPC_GPIO1->FIODIR=0XF<<23; 
LPC_SC->PCONP|=1<<12;
LPC_ADC->ADCR=(1<<1|1<<16|1<<21);
NVIC_EnableIRQ(ADC_IRQn); 
LPC_ADC->ADINTEN=(1<<1);
 while(1); 
} 
void buzzer(){ 
for(l=0;l<10;l++){ 
LPC_GPIO0->FIOSET=1<<22; 
	LPC_GPIO2->FIOSET=1<<1; 
	LPC_GPIO2->FIOSET=1<<13; 
for(s=0;s<88000;s++); 
LPC_GPIO0->FIOCLR=1<<22; 
	LPC_GPIO2->FIOCLR=1<<1; 
	LPC_GPIO2->FIOCLR=1<<13; 
for(s=0;s<400000;s++); 
} 
}
void ADC_IRQHandler() 
{ 
a=(LPC_ADC->ADSTAT) & 1<<1; 
if(a) 
{ 
b=(LPC_ADC->ADDR1);
} 
temp2=LPC_ADC->ADGDR; 
b= b & 0xFFFF;
b>>=4;
y=((float)(b*(330.0/4096))-10); 
digits[3]=((int)y/10); 
digits[2]=((int)(y)%10); 
digits[1]=((int)(y*10)%10); 
while(LPC_TIM0->EMR & 0X01) 
{ 
display(); 
                      } 
if( y>35) 
buzzer(); 
LPC_TIM0->EMR=0X011;
} 
void display(void) 
{ 
int x=0,i; 
for(x=0;x<4;x++) 
{ 
LPC_GPIO1->FIOPIN=dig_sel[x]; 
if(x==2) 
{ 
r1=(seven_seg[digits[x]]|0x80); 
		}
else if(x==0) 
{ 
r1=0x39;
} 
else 
{ 
r1=(seven_seg[digits[x]]);
                 } 
LPC_GPIO0->FIOPIN=r1<<4; 
for(i=0;i<500;i++); 
LPC_GPIO0->FIOPIN=00<<4; 
} 
} 
void timer_init() 
{ 
LPC_TIM0->CTCR=0X00; 
LPC_TIM0->TCR=0X02;
LPC_TIM0->MCR=0X02;  
LPC_TIM0->PR=0X02;
LPC_TIM0->MR0=2999999; 
LPC_TIM0->EMR=0X011; 
LPC_TIM0->TCR=0X01;
}
